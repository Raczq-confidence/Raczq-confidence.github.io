<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>云服务器搭建MySQL并远程连接</title>
      <link href="2020/12219273.html"/>
      <url>2020/12219273.html</url>
      
        <content type="html"><![CDATA[<p>感谢下面几篇博客的知识分享</p><ul><li><a href="https://www.jianshu.com/p/1dab9a4d0d5f">CentOS7 下 MySQL5.7的安装与配置</a></li><li><a href="https://blog.csdn.net/aa1215018028/article/details/90106425">MySQL5.7创建用户并授权，设置允许远程连接</a></li><li><a href="https://segmentfault.com/a/1190000022046000">记一次Navicat for MySQL 10060错误的解决过程</a></li></ul><p>本博客更多是根据我的具体情况来对上述三位进行总结</p><h2 id="1-CentOS7-下-MySQL5-7的安装与配置"><a href="#1-CentOS7-下-MySQL5-7的安装与配置" class="headerlink" title="1.CentOS7 下 MySQL5.7的安装与配置"></a>1.CentOS7 下 MySQL5.7的安装与配置</h2><p>本文的测试环境：</p><ul><li>CentOS 7.6.64</li><li>MySQL 5.7.32</li></ul><h3 id="安装MySQL源"><a href="#安装MySQL源" class="headerlink" title="安装MySQL源"></a>安装MySQL源</h3><p>安装MySQL源</p><pre class="line-numbers language-none"><code class="language-none"># 下载wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm# 安装 mysql 源yum localinstall mysql57-community-release-el7-11.noarch.rpm<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>用下面的命令检查 MySQL源是否安装成功</p><pre class="line-numbers language-none"><code class="language-none">yum repolist enabled | grep "mysql.*-community.*"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><p>使用 yum install 命令安装</p><pre class="line-numbers language-none"><code class="language-none">yum install -y mysql-community-server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a>启动MySQL服务</h3><p>在 CentOS 7 下，新的启动/关闭服务的命令是 <code>systemctl start|stop mysqld</code></p><pre class="line-numbers language-none"><code class="language-none">systemctl start mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用 <code>systemctl status</code> 查看 MySQL 状态</p><pre class="line-numbers language-none"><code class="language-none">systemctl status mysqld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://upload-images.jianshu.io/upload_images/1458376-cd1d2a407337b5a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1128/format/webp" alt="MySQL 启动状态"></p><h3 id="设置开机密码"><a href="#设置开机密码" class="headerlink" title="设置开机密码"></a>设置开机密码</h3><pre class="line-numbers language-none"><code class="language-none">systemctl enable mysqld# 重载所有修改过的配置文件systemctl daemon-reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="修改root本地账户密码"><a href="#修改root本地账户密码" class="headerlink" title="修改root本地账户密码"></a>修改root本地账户密码</h3><p>MySQL 安装完成之后，生成的默认密码在 <code>/var/log/mysqld.log</code> 文件中。使用 grep 命令找到日志中的密码。</p><pre class="line-numbers language-none"><code class="language-none">grep 'temporary password' /var/log/mysqld.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://upload-images.jianshu.io/upload_images/1458376-6694dca4f9eb39a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1137/format/webp" alt="查看临时密码"></p><p>临时密码就是localhost：后面的字段</p><p>接下来我们准备进入MYSQL数据库</p><pre class="line-numbers language-none"><code class="language-none">mysql -uroot -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接下来会需要输入密码，将上面看到的临时密码输入就可以进入MySQL数据库了</p><p>当shell的运行从shell&gt;变为mysql&gt;时，则进入数据库成功</p><p>首次通过初始密码登录后，需要使用以下命令修改密码</p><pre class="line-numbers language-none"><code class="language-none">ALTER USER 'root'@'localhost' IDENTIFIED BY '此处为你想要设置的密码'; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改密码之后重新更新权限</p><pre class="line-numbers language-none"><code class="language-none">flush privileges;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意：mysql 5.7 默认安装了密码安全检查插件（validate_password），默认密码检查策略要求密码必须包含：大小写字母、数字和特殊符号，并且长度不能少于8位。否则会提示 ERROR 1819 (HY000): Your password does not satisfy the current policy requirements 错误。查看 <a href="https://links.jianshu.com/go?to=https://dev.mysql.com/doc/refman/5.7/en/validate-password-options-variables.html%23sysvar_validate_password_policy">MySQL官网密码详细策略</a></p></blockquote><p><strong>注意：</strong>建议将密码设置的复杂一点，之前我有一位朋友，账号和密码都是root，导致被黑客劫持，向他索要比特币（真会挑人，都是穷*），虽然数据库没什么重要的东西，但是之前项目搭建的数据库全部木大，所以在这里建议各位尽量设置的复杂一点</p><h3 id="设置默认编码为utf8"><a href="#设置默认编码为utf8" class="headerlink" title="设置默认编码为utf8"></a>设置默认编码为utf8</h3><p>mysql 安装后默认不支持中文，需要修改编码。<br>修改 <code>/etc/my.cnf</code> 配置文件，在相关节点（没有则自行添加）下添加编码配置，如下：</p><pre class="line-numbers language-none"><code class="language-none">[mysqld]character-set-server=utf8[client]default-character-set=utf8[mysql]default-character-set=utf8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重启mysql服务，查询编码。可以看到已经改过来了</p><pre class="line-numbers language-none"><code class="language-none">systemctl restart mysqldmysql -uroot -pshow variables like 'character%';<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://upload-images.jianshu.io/upload_images/1458376-5a83be282b3c7870.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/811/format/webp" alt="查看编码"></p><h2 id="2-远程连接"><a href="#2-远程连接" class="headerlink" title="2.远程连接"></a>2.远程连接</h2><h3 id="添加远程登录用户"><a href="#添加远程登录用户" class="headerlink" title="添加远程登录用户"></a>添加远程登录用户</h3><p>默认只允许root帐户在本地登录，如果要在其它机器上连接mysql，必须<strong>添加一个允许远程连接的账户</strong>。或者<del>修改root为允许远程连接</del>（不推荐）</p><p>创建一个新用户</p><pre class="line-numbers language-none"><code class="language-none">CREATE USER 'username'@'host' IDENTIFIED BY 'password';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：</p><ul><li>username：你将创建的用户名</li><li>host：指定该用户在哪个主机上可以登陆，如果是本地用户可用localhost，如果想让该用户可以<strong>从任意远程主机登录</strong>，可以使用通配符<code>%</code>，如果想让该用户从指定远程主机登录，可以输入对应主机的ip地址</li><li>password：该用户的登陆密码，密码可以为空，如果为空则该用户可以不需要密码登陆服务器</li></ul><p>例子：</p><ol><li><code>CREATE USER 'dog'@'localhost' IDENTIFIED BY '123456';</code></li><li><code>CREATE USER 'pig'@'192.168.1.101' IDENTIFIED BY '123456';</code></li><li><code>CREATE USER 'pig'@'%' IDENTIFIED BY '123456';</code></li><li><code>CREATE USER 'pig'@'%' IDENTIFIED BY '';</code></li><li><code>CREATE USER 'pig'@'%';</code></li></ol><h3 id="为新建用户授权"><a href="#为新建用户授权" class="headerlink" title="为新建用户授权"></a>为新建用户授权</h3><pre class="line-numbers language-none"><code class="language-none">GRANT privileges ON databasename.tablename TO 'username'@'host';<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>说明：</p><ul><li>privileges：用户的操作权限，如<code>SELECT</code>，<code>INSERT</code>，<code>UPDATE</code>等，如果要授予所的权限则使用<code>ALL</code></li><li>databasename：数据库名</li><li>tablename：表名，如果要授予该用户对所有数据库和表的相应操作权限则可用<code>*</code>表示，如<code>*.*</code></li></ul><p>例子：</p><ol><li><code>GRANT SELECT, INSERT ON test.user TO 'pig'@'%';</code></li><li><code>GRANT ALL ON *.* TO 'pig'@'%';</code></li><li><code>GRANT ALL ON maindataplus.* TO 'pig'@'%';</code></li></ol><p><strong>注意：</strong></p><p>用以上命令授权的用户不能给其它用户授权，如果想让该用户可以授权，用以下命令：</p><pre class="line-numbers language-none"><code class="language-none">GRANT privileges ON databasename.tablename TO 'username'@'host' WITH GRANT OPTION;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="开始远程连接"><a href="#开始远程连接" class="headerlink" title="开始远程连接"></a>开始远程连接</h3><p>接下来使用一些MySQL图形化界面来远程连接，我这里使用的是sqlyog</p><p>输入对应的主机ip地址，用户名，密码以及对应的端口</p><p><img src="https://pic.downk.cc/item/5fe340503ffa7d37b3d52f38.png" alt="sqlyog新连接"></p><p>如果直接成功请忽略下面的操作，如果连接失败出现了**ERROR: 2003 Can’t connect to MySQL server on ‘xxx.xx.xx.xx’**，可以通过下列方法逐步进行排查</p><h2 id="3-解决主机连接失败问题"><a href="#3-解决主机连接失败问题" class="headerlink" title="3.解决主机连接失败问题"></a>3.解决主机连接失败问题</h2><h3 id="检查网络"><a href="#检查网络" class="headerlink" title="检查网络"></a>检查网络</h3><p>先检查网络是否畅通，我才用的方法是Xshell访问远程主机，你也可以尝试使用<code>ping</code></p><h3 id="检查云服务器的安全组"><a href="#检查云服务器的安全组" class="headerlink" title="检查云服务器的安全组"></a>检查云服务器的安全组</h3><p>登录你服务器的对应控制台（阿里云就进入阿里云控制台，腾讯云就进入腾讯云控制台）</p><p>检查22，443，80，3306端口是否放通</p><h3 id="检查用户权限"><a href="#检查用户权限" class="headerlink" title="检查用户权限"></a>检查用户权限</h3><p>进入数据库</p><pre class="line-numbers language-none"><code class="language-none">mysql -uroot -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入密码进入数据库后，对于用户权限进行查询</p><pre class="line-numbers language-none"><code class="language-none">use mysqlselect host,user from user;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果发现对应user的host有问题，则就是用户权限问题，如果为<code>%</code>或者正确的话，则继续向下排查</p><h3 id="检查CentOS防火墙"><a href="#检查CentOS防火墙" class="headerlink" title="检查CentOS防火墙"></a>检查CentOS防火墙</h3><p>这一步很容易被忽略，因为我当时就以为安全组已经设置好了，不必再检查CentOS的防火墙。其实检查防火墙是很有必要的，我们应该把3306端口放通，再重启防火墙，在Xshell中输入一下控制命令</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --permanent --zone=public --add-port=3306/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现success则设置成功</p><pre class="line-numbers language-none"><code class="language-none">firewall-cmd --reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现success则证明防火墙重启成功</p><p>再在sqlyog进行连接测试</p><p>出现下面界面证明远程连接成功</p><p><img src="https://pic.downk.cc/item/5fe345733ffa7d37b3dac430.png" alt="连接成功"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
